
@{
    ViewBag.Title = "Ordini di Vendita";
    string currentUrl = HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority) + "/" + ViewContext.RouteData.GetRequiredString("controller");
    string username = ViewBag.username;
}
@section header {
    <script>

        show_message = function (errore, messaggio) {
            alert(messaggio);
        }

        app.controller('ctrl', ['$scope', '$http', '$window', 'tabController', function ($scope, $http, $window, tabController) {
            $scope.select_row = function (index) {
                switch ($scope.tc.table) {
                    case 'tableSelCliente':
                        $('#tableClienti tr').removeClass('success');
                        $('#tableClienti tr:nth-child(' + (index) + ') ').addClass('success');
                        $('#tableClienti tr:nth-child(' + (index) + ') input.request-focus').focus().select();
                        break;
                    case 'tableSelArticoli':
                        $('#tableArticoli tr').removeClass('success');
                        $('#tableArticoli tr:nth-child(' + (index) + ') ').addClass('success');
                        $('#tableArticoli tr:nth-child(' + (index) + ') input.request-focus').focus().select();
                        break;
                    case 'tableOrdine':
                        $('#tableOrdine tr').removeClass('success');
                        $('#tableOrdine tr:nth-child(' + (index) + ') ').addClass('success');
                        $('#tableOrdine tr:nth-child(' + (index) + ') input.request-focus').focus().select();
                        break;
                    default:
                        $('.table tr').removeClass('success');
                        $('.table tr:nth-child(' + (index) + ') ').addClass('success');
                        $('.table tr:nth-child(' + (index) + ') button.request-focus').focus().select();
                        break;
                }

            };

            $scope.checked = true;

            $scope.selCondPag = @{Html.RenderAction("GetCondPag", "Get");};
            $scope.selVettori = @{Html.RenderAction("GetVettori", "Get");};
            $scope.selAgenti = @{Html.RenderAction("GetAgentiOrdine", "Get");};


            //$scope.test = 'test';

            $scope.select_cliente_filtri = function (item) {
                $scope.tc.filtri.id_cliente = item?item.id:'';
                $scope.tc.refresh();
                //$('#cercaClienteModal').removeAttr("autofocus");
            };

            $scope.select_agente_filtri = function (item) {
                $scope.tc.filtri.id_agente = item ? item.id : '';
                $scope.tc.refresh();
            };

            @*@(ViewBag.scope_var)*@

            var exit_edit = function () {
                //$scope.clienteSeleziona = {};
                //$scope.query_nuovo_cliente = {};
            };

            var exit_new = function () {
                $scope.tc.clienteSeleziona = {};
                $scope.query_nuovo_cliente = '';
            };

            $scope.tc = tabController.createController({
                api_root: '@currentUrl',
                select_row_call_back: $scope.select_row,
                message_function: show_message,
                exit_edit: exit_edit,
                exit_new: exit_new
            });

            $scope.tc.refresh();

            $scope.select_cliente = function (item) {
                Object.assign($scope.tc.current, item);
                $scope.tc.current.ragione_sociale = item.name;
            };


            $scope.select_articolo = function (index,item) {
                $('#tableArticoli tr:nth-child(' + (index+1) + ') ').addClass('warning');
                if (typeof (item) == 'undefined')
                    return;
                if (typeof ($scope.tc.current.righe) == 'undefined') {
                    $scope.tc.current.righe = [];
                }
                var newLine = {};

                Object.assign(newLine, item);
                $scope.tc.current.righe.push(newLine);
            };

            $scope.eminina_riga = function (item) {
                var index = $scope.tc.current.righe.indexOf(item);
                if (index > -1) {
                    $scope.tc.current.righe.splice(index, 1);
                }
            };

            $scope.showAdd = function () {
                $scope.tc.shAdd = !$scope.tc.shAdd
                $scope.tc.table = 'tableOrdine';
                $scope.tc.rec_pagina = -1;
                scope.tc.id_codice_art_new = "";

            }

            $scope.saveEdit = function () {
                $scope.tc.current.username = '@(username)';
                $scope.tc.saveEdit($scope.tc.current);
            };

             $scope.copia_sconto = function () {
                var r = confirm("Confermi la copia massiva dello sconto");
                if (r == true) {
                    if (typeof ($scope.sconto_cassa) != 'undefined') {
                        $scope.riga = {};
                                               
                        for (var i = 0; i <= $scope.tc.current.righe.length; i++) {
                            $scope.tc.current.righe[i].sconto_3 = $scope.sconto_cassa;
                        }
                    }
                }
            };


            $scope.riseleziona_articoli = function () {

                $http({
                    method: 'POST',
                    url: '@(Url.Action("GetArticoli", "Get"))',
                    data: {
                        query: $scope.tc.id_codice_art_new,
                        id_cliente: $scope.tc.current.id_cliente
                        }
                }).then(function (response) {
                    $scope.tc.articoliaggiunta = response.data;
                    $scope.tc.table = "tableSelArticoli";
                    $scope.tc.rec_pagina = -1;
                }).catch(function (error, status) {
                    fac.prop.message_function('Errore', error.data);
                });
            };

            $scope.cerca_cliente = function () {
                $scope.tc.table = "tableClienti";
                $scope.tc.rec_pagina = -1;
                $scope.query_nuovo_cliente = '';
                $('#modal_ricerca_clienti').modal('show');
            };


            $scope.ddtfattura = function (item, tipo) {
                item.tipo = tipo;
                $http({
                    method: 'POST',
                    url: '@(Url.Action("DdtFattura"))',
                    data: item
                }).then(function (response) {
                    if (response.data.ack == 'KO') {
                        show_message('Errore', response.data.messaggio);
                    } else {
                        if (tipo == 'ddt') {
                            show_message('Info', 'Consegna ' + response.data.esercizio + ' ' + response.data.id_consegna + ' creata');
                        } else if (tipo == 'fat') {
                            show_message('Info', 'Fattura ' + response.data.esercizio + ' ' + response.data.prot_iva + ' creata');
                        }
                    }
                    $scope.tc.displayMode = "list";
                    $scope.tc.refresh_page($scope.tc.pag_corrente);

                    console.log("ok fatto")
                }).catch(function (error, status) {
                    show_message('Errore', error.data);
                });
            };

            $scope.printMassivo = function (item, tipo) {
                var url;
                if (tipo == 'ddt') {
                    url = '@(Url.Action("MassivoDdt"))'
                } else {
                    url = '@(Url.Action("MassivoFat"))'
                }

                 $http({
                    method: 'POST',
                    url: url,
                    data: item
                }).then(function (response) {
                    if (response.data.ack == 'KO') {
                        show_message('Errore', response.data.messaggio);
                    }

                    //rispondere con un messagio che includa tutti i ddt o le fatture convertite

                    $scope.tc.refresh_page($scope.tc.pag_corrente);
                    console.log("ok fatto")
                }).catch(function (error, status) {
                    show_message('Errore', error.data);
                });
            }


            $scope.riseleziona_cliente = function () {

                $http({
                    method: 'POST',
                    url: '@(Url.Action("GetClienti", "Get"))',
                    data: {
                        query: $scope.query_nuovo_cliente
                        }
                }).then(function (response) {
                    $scope.tc.clienteSeleziona = response.data;
                }).catch(function (error, status) {
                    fac.prop.message_function('Errore', error.data);
                });
            };

            $scope.select_cliente = function (item) {
                Object.assign($scope.tc.current, item);
                $scope.tc.current.username = '@(username)';
            };

            $scope.print = function () {
                $scope.tc.current.username = '@(username)';
                $scope.tc.saveEdit( $scope.tc.current, openstampa);
            };

        }]);


        function openstampa(item) {
            var url = 'http://80.211.233.101:8080/petline' + '/vendite/ordiniVendita_download.jsp?formato=vendite_StPickingList&esercizio=' + item.esercizio + '&id_ordine=' + item.id_ordine;
            location.href = url;
            window.open(url, '_blank');
        };
    </script>
}
@section scripts{
    <script src="@Url.Content("~/Scripts/bootstrap-datepicker.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-datepicker.it.min.js")"></script>
    <script>
        $('.data-new input').datepicker({ format: "dd/mm/yyyy", weekStart: 1, language: "it", calendarWeeks: true });

        $('#a-data').change(function () {
            var current = $('#a-data').val();
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.filtri.al_data = current.substring(6, 10) + '-' + current.substring(3, 5) + '-' + current.substring(0, 2);
                scope.tc.refresh(scope.pag_corrente);
            });
        });

        $('#da-data').change(function () {
            var current = $('#da-data').val();
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.filtri.da_data = current.substring(6, 10) + '-' + current.substring(3, 5) + '-' + current.substring(0, 2);
                scope.tc.refresh(scope.pag_corrente);
            });
        });

        shortcut.add("Home", function () {
            $('#query').focus();
        });

        shortcut.add("F2", function () {
            $('#selectArticoloAdd').focus().select();
        });

        shortcut.add("Up", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.previous_record();
            });
        });

        shortcut.add("Down", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.next_record();
            });
        });

        shortcut.add("Ctrl+S", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.save_current_record();
            });
        });

        shortcut.add("pd", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.pag_corrente < scope.tc.pag_number - 1) {
                    scope.tc.refresh_page(scope.tc.pag_corrente + 1);
                }
            });
        });

        shortcut.add("pu", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.pag_corrente > 0) {
                    scope.tc.refresh_page(scope.tc.pag_corrente - 1);
                }
            });
        });

        shortcut.add("F11", function () {            
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit' && scope.tc.nuovo == true ) {
                    scope.cerca_cliente();
                }
            });
            $('#cercaClienteModal').focus();
        });

        shortcut.add("F5", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'list') {
                    scope.refresh();
                }
            });
        });

        shortcut.add("Ctrl+Alt+N", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'list') {
                    scope.tc.create();
                    scope.tc.id_codice_art_new = "";
                }
            });
        });

        shortcut.add("Ctrl+Alt+X", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit') {
                    scope.tc.cancelEdit();
                }
            });
        });

        shortcut.add("Ctrl+Alt+S", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit' && scope.current.length > 0) {
                    scope.tc.saveEdit(scope.current);                    
                }
            });
        });

        shortcut.add("F1", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit' && scope.tc.current.id_cliente.length > 0) {
                    scope.tc.shAdd = !scope.tc.shAdd;
                    scope.tc.table = 'tableOrdine';
                    scope.tc.id_codice_art_new = "";
                }
            });
        });
    </script>
}
<div class="main-content" ng-controller="ctrl" ng-cloak>    
    @Html.Partial("_ElencoOrdini")
    @Html.Partial("_NuovoModificaOrdine")
    @Html.Partial("_ModalCercaCliente")
</div>

