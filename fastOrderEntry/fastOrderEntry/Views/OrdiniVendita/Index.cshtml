
@{
    ViewBag.Title = "Ordini di Vendita";
    string currentUrl = HttpContext.Current.Request.Url.GetLeftPart(UriPartial.Authority) + "/" + ViewContext.RouteData.GetRequiredString("controller");
}
@section header {
    <script>

        show_message = function (errore, messaggio) {
            alert(messaggio);
        }

        app.controller('ctrl', ['$scope', '$http', 'tabController', function ($scope, $http, tabController) {
            $scope.select_row = function (index) {
                console.log(index);
                $('#table tr').removeClass('text-info');
                $('#table tr:nth-child(' + (index) + ') ').addClass('text-info');
            };

            $scope.selCondPag = @{Html.RenderAction("GetCondPag", "Get");};
            $scope.selVettori = @{Html.RenderAction("GetVettori", "Get");};

            $scope.test = 'test';

            $scope.select_cliente_filtri = function (item) {
                $scope.tc.filtri.id_cliente = item?item.id:'';
                $scope.tc.refresh();
                //$('#cercaClienteModal').removeAttr("autofocus");
            };

            $scope.select_agente_filtri = function (item) {
                $scope.tc.filtri.id_agente = item ? item.id : '';
                $scope.tc.refresh();
            };

            @*@(ViewBag.scope_var)*@

            var exit_edit = function () {
                //$scope.clienteSeleziona = {};
                //$scope.query_nuovo_cliente = {};
            };

            var exit_new = function () {
                $scope.clienteSeleziona = {}; 
                $scope.query_nuovo_cliente = '';
            };

            $scope.tc = tabController.createController({
                api_root: '@currentUrl',
                select_row_call_back: $scope.select_row,
                message_function: show_message,
                exit_edit: exit_edit,
                exit_new: exit_new
            });

            $scope.tc.refresh();


            $scope.select_cliente = function (item) {
                Object.assign($scope.tc.current, item);
                $scope.tc.current.ragione_sociale = item.name;
            };

            
            $scope.select_articolo = function (item) {
                if (typeof (item) == 'undefined')
                    return;
                if (typeof ($scope.tc.current.righe) == 'undefined') {
                    $scope.tc.current.righe = [];
                }
                var newLine = {};

                Object.assign(newLine, item);
                
                $scope.tc.current.righe.push(newLine);
            };

            $scope.eminina_riga = function (item) {
                var index = $scope.tc.current.righe.indexOf(item);
                if (index > -1) {
                    $scope.tc.current.righe.splice(index, 1);
                }
            };

            $scope.showAdd = function () {
                $scope.shAdd = !$scope.shAdd
                angular.element("#selectArticoloAdd").focus();
            }


            $scope.riseleziona_articoli = function () {

                $http({
                    method: 'POST',
                    url: '@(Url.Action("GetArticoli", "Get"))',
                    data: {
                        query: $scope.id_codice_art_new,
                        id_cliente: $scope.tc.current.id_cliente
                        }
                }).then(function (response) {
                    $scope.articoliaggiunta = response.data;
                }).catch(function (error, status) {
                    fac.prop.message_function('Errore', error.data);
                });
            };

            $scope.cerca_cliente = function () {
                $('#modal_ricerca_clienti').modal('show');
                //$('#cercaClienteModal').attr("autofocus");
            };
            

            $scope.riseleziona_cliente = function () {

                $http({
                    method: 'POST',
                    url: '@(Url.Action("GetClienti", "Get"))',
                    data: {
                        query: $scope.query_nuovo_cliente
                        }
                }).then(function (response) {
                    $scope.clienteSeleziona = response.data;
                }).catch(function (error, status) {
                    fac.prop.message_function('Errore', error.data);
                });
            };

            $scope.select_cliente = function (item) {
                Object.assign($scope.tc.current, item);
            };
        }]);
    </script>
}
@section scripts{
    <script src="@Url.Content("~/Scripts/bootstrap-datepicker.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap-datepicker.it.min.js")"></script>
    <script>
        $('.data-new input').datepicker({ format: "dd/mm/yyyy", weekStart: 1, language: "it", calendarWeeks: true });

        $('#a-data').change(function () {
            var current = $('#a-data').val();
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.filtri.al_data = current.substring(6, 10) + '-' + current.substring(3, 5) + '-' + current.substring(0, 2);
                scope.tc.refresh(scope.pag_corrente);
            });
        });

        $('#da-data').change(function () {
            var current = $('#da-data').val();
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.filtri.da_data = current.substring(6, 10) + '-' + current.substring(3, 5) + '-' + current.substring(0, 2);
                scope.tc.refresh(scope.pag_corrente);
            });
        });

        shortcut.add("Home", function () {
            $('#query').focus();
        });

        shortcut.add("Up", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.previous_record();
            });
        });

        shortcut.add("Down", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.next_record();
            });
        });

        shortcut.add("Ctrl+S", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                scope.tc.save_current_record();
            });
        });

        shortcut.add("pd", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.pag_corrente < scope.tc.pag_number - 1) {
                    scope.tc.refresh_page(scope.tc.pag_corrente + 1);
                }
            });
        });

        shortcut.add("pu", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.pag_corrente > 0) {
                    scope.tc.refresh_page(scope.tc.pag_corrente - 1);
                }
            });
        });

        shortcut.add("F10", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit') {
                    scope.cerca_cliente();
                }
            });
        });

        shortcut.add("F5", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'list') {
                    scope.refresh();
                }
            });
        });

        shortcut.add("Ctrl+Alt+N", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'list') {
                    scope.tc.create();
                }
            });
        });

        shortcut.add("Ctrl+Alt+X", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit') {
                    scope.tc.cancelEdit();
                }
            });
        });

        shortcut.add("Ctrl+Alt+S", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit' && scope.current.length > 0) {
                    scope.tc.saveEdit(scope.current);
                }
            });
        });

        shortcut.add("Ctrl+1", function () {
            var scope = angular.element($("[ng-controller='ctrl']")).scope();
            scope.$apply(function () {
                if (scope.tc.displayMode == 'edit' && scope.tc.current.id_cliente.length > 0) {
                    scope.shAdd = !scope.shAdd;
                }
            });
        });
    </script>
}
<div class="main-content" ng-controller="ctrl" ng-cloak>
    @Html.Partial("_ElencoOrdini")
    @Html.Partial("_NuovoModificaOrdine")
    <div class="modal fade" id="modal_ricerca_clienti" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <label><strong>Seleziona cliente</strong></label>
                            <input type="text" id="cercaClienteModal" class="form-control" placeholder="seleziona cliente .." ng-change="riseleziona_cliente()" 
                                   ng-model="query_nuovo_cliente" autofocus />
                            <table class="table table-hover table-striped" id="table" ng-show="clienteSeleziona">
                                <thead>
                                    <tr>
                                        <th>Codice</th>
                                        <th>Ragione Sociale</th>
                                        <th>Comune</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="item in clienteSeleziona">
                                        <td>{{item.id | trimZeros}}</td>
                                        <td>{{item.name}}</td>
                                        <td>{{item.comune}}</td>
                                        <td>
                                            <button class="btn btn-grey btn-xs" ng-click="select_cliente(item)" data-dismiss="modal"><i class="glyphicon glyphicon-check"></i></button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>	
</div>

